apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 29
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        applicationId "com.example.examscanner"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    sourceSets {
        androidTest {
            java.srcDirs += "src/sharedTest/java"
        }
        test {
            java.srcDirs += "src/sharedTest/java"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    def camerax_version = "1.0.0-beta01"
    def fragment_version = "1.2.2"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.0.0'
    implementation 'androidx.navigation:navigation-ui:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    //noinspection GradleCompatible
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    // CameraX core library using the camera2 implementation
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to use the CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha08"
    // If you want to use the CameraX Extensions library
    implementation "androidx.camera:camera-extensions:1.0.0-alpha08"
    // If you want to use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    // RxJava
    implementation "io.reactivex.rxjava2:rxandroid:2.0.1"
    implementation "io.reactivex.rxjava2:rxjava:2.1.3"
    implementation("androidx.fragment:fragment-testing:" + fragment_version, {
        exclude group: 'androidx.test', module: 'core'
    })
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation 'androidx.room:room-runtime:' + rootProject.room_version

    // volley
    implementation 'com.android.volley:volley:1.1.0'

    implementation 'androidx.test:core:' + rootProject.coreVersion

    implementation 'com.google.firebase:firebase-analytics:17.3.0'
    implementation 'com.google.firebase:firebase-auth:19.3.0'
    implementation 'com.google.firebase:firebase-database:19.2.1'
    implementation 'com.firebaseui:firebase-ui-auth:' + rootProject.firebase_ui_auth_version
    implementation 'com.google.firebase:firebase-database:' + rootProject.firebase_db_version

    implementation 'com.google.firebase:firebase-storage:19.1.1'
    implementation 'com.github.barteksc:android-pdf-viewer:2.0.3'

    implementation 'com.google.firebase:firebase-analytics:17.4.4'

    // Add the Firebase Crashlytics SDK.
    implementation 'com.google.firebase:firebase-crashlytics:17.1.1'

    // androidTest
    androidTestImplementation 'androidx.test:core:' + rootProject.coreVersion
    androidTestImplementation 'androidx.test:core-ktx:' + rootProject.coreVersion
    androidTestImplementation 'androidx.test.ext:junit:' + rootProject.extJUnitVersion
    androidTestImplementation 'androidx.test.ext:junit-ktx:' + rootProject.extJUnitVersion
    androidTestImplementation 'androidx.test:runner:' + rootProject.runnerVersion
    androidTestImplementation 'androidx.test.espresso:espresso-core:' + rootProject.espressoVersion
    androidTestImplementation 'androidx.test.espresso:espresso-intents:' + rootProject.espressoVersion
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:' + rootProject.uiautomatorVersion
    androidTestImplementation 'androidx.test:rules:' + rootProject.rulesVersion
    // Optional -- Mockito framework
    androidTestImplementation 'org.mockito:mockito-core:1.10.19'
    androidTestImplementation 'com.linkedin.dexmaker:dexmaker-mockito:2.25.1'
    androidTestImplementation 'androidx.navigation:navigation-testing:' + rootProject.nav_version


    // test
    testImplementation 'androidx.test:core:' + rootProject.coreVersion;
    testImplementation 'androidx.test.ext:junit:' + rootProject.extJUnitVersion
    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.test:runner:' + rootProject.runnerVersion
    testImplementation 'org.robolectric:robolectric:' + rootProject.robolectricVersion
    testImplementation 'androidx.test:rules:' + rootProject.rulesVersion
    testImplementation 'androidx.test.espresso:espresso-core:' + rootProject.espressoVersion
    testImplementation 'androidx.test.espresso:espresso-intents:' + rootProject.espressoVersion
    testImplementation 'androidx.test.ext:truth:' + rootProject.extTruthVersion
    testImplementation 'org.json:json:20140107'
    testImplementation project(path: ':openCVLibrary343')
    // Test helpers
    testImplementation 'androidx.room:room-testing:' + rootProject.room_version
    annotationProcessor 'androidx.room:room-compiler:' + rootProject.room_version


    debugImplementation 'androidx.fragment:fragment-testing:' + fragment_version
    debugImplementation 'androidx.navigation:navigation-testing:' + rootProject.nav_version
    debugImplementation 'androidx.test:core:' + rootProject.coreVersion
    debugImplementation 'androidx.test:monitor:' + rootProject.coreVersion

    apply plugin: "androidx.navigation.safeargs"
    apply plugin: 'com.google.firebase.crashlytics'
    implementation project(path: ':openCVLibrary343')
}
